stock_info <- getSymbols(DJIA)
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(getSymbols(DJIA[1]).close, order = c(0,0,0)), output = TRUE)[,5])
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
View(BA)
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(getSymbols(DJIA[i])[4], order = c(0,0,0)), output = TRUE)[,5])
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
for (i in 1:30){
getSymbols(DJIA[i])[4]
}
for (i in 1:30){
print(getSymbols(DJIA[i])[4])
}
for (i in 1:30){
print(getSymbols(DJIA[i]))
}
for (ticker in DJIA){
print(ticker)}
for (ticker in DJIA){
stocks <-  cbind(ticker[4])}
View(stocks)
PFR[4]
PFE[4]
PFE[4]
PFE[4][1]
PFE[,1]
PFE[,4]
stocks <-  cbind(ticker[,4])}
for (ticker in DJIA){
stocks <-  cbind(ticker[,4])}
print(ticker[,4])}
print(ticker[,4])}
for (ticker in DJIA){
print(ticker[,4])}
library(quantmod)
Stocks <- getSymbols(DJIA)[4]
Stocks <- getSymbols(DJIA)[,4]
stocks <- data.frame(getSymbols(DJIA)[,4])
getSymbols("MMM")[,4]
getSymbols("MMM")
library(graphics)
library(quantmod)
library(TTR)
library(ks)
library(scales)
library(forecast)
library(aTSA)
library(ccgarch)
library(fGarch)
library(rugarch)
library(dplyr)
DJIA = c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ",
"JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
getSymbols("MMM")
getSymbols(DJIA)
stocks <- cbind(getSymbols(DJIA))
stocks <- data.frame(cbind(getSymbols(DJIA)))
View(stocks)
for(ticker in DJIA){
list[[i]] <- getSymbols(ticker)
}
list[[ticker]] <- getSymbols(ticker)
# load CSV data file
library(stringr)
Stock_Data <- str_replace_all(DJIA, ""","")
cbind()
# Part 1 #
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,(i+30)], order = c(0,0,0)), output = TRUE)[,5])
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
## Top 5: IBM, JNJ, NKE, PG, WMT
top5 = c("IBM.Close","JNJ.Close","NKE.Close","PG.Close","WMT.Close","ibm_r","jnj_r","nke_r","pg_r","wmt_r")
stocks <- data.frame(stocks)
stocks <- stocks[,top5]
# Create GARCH models and get parameters and AIC for each stock
info = data.frame()
top = c("IBM", "JNJ", "NKE", "PG", "WMT")
for (i in 1:5){
temp <- data.frame()
j <- 1
# GARCH-Normal
GARCH.N <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="norm", include.mean = FALSE)
temp[j,"model"] <- "GARCH-Normal"
temp[j,"alpha"] <- GARCH.N@fit$par["alpha1"]
temp[j,"beta"]  <- GARCH.N@fit$par["beta1"]
temp[j,"AIC"]   <- GARCH.N@fit$ics["AIC"]
j <- 2
# GARCH-t
GARCH.t <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="std", include.mean = FALSE)
temp[j,"model"] <- "GARCH-t"
temp[j,"alpha"] <- GARCH.t@fit$par["alpha1"]
temp[j,"beta"]  <- GARCH.t@fit$par["beta1"]
temp[j,"AIC"]   <- GARCH.t@fit$ics["AIC"]
j <- 3
# QGARCH-Normal
Skew.GARCH.N <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="snorm",include.mean = FALSE)
temp[j,"model"] <- "QGARCH-Normal"
temp[j,"alpha"] <- Skew.GARCH.N@fit$par["alpha1"]
temp[j,"beta"]  <- Skew.GARCH.N@fit$par["beta1"]
temp[j,"AIC"]   <- Skew.GARCH.N@fit$ics["AIC"]
j <- 4
# QGARCH-t
Skew.GARCH.t <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="sstd", include.mean = FALSE)
temp[j,"model"] <- "QGARCH-t"
temp[j,"alpha"] <- Skew.GARCH.t@fit$par["alpha1"]
temp[j,"beta"]  <- Skew.GARCH.t@fit$par["beta1"]
temp[j,"AIC"]   <- Skew.GARCH.t@fit$ics["AIC"]
info <- bind_rows(info, temp)
}
# best models
info <- info[c(2,8,10,14,20),]
info["stock"] <- top
# rank by alpha (most susceptible to market shock)
info <- arrange(info, desc(alpha))
## from most to least susceptible: NKE, WMT, JNJ, IBM, PG
# rank by beta (longest lasting shock effects)
info <- arrange(info, desc(beta))
## from longest to shortest effect: PG, IBM, JNJ, NKE, WMT
Stock_Data <- str_replace_all(DJIA, "\"","")
Stock_Data <- str_replace_all(DJIA, "\"","")
cbind(MMM[4],AXP[4],AAPL[4],BA[4],CAT[4],CVX[4],KO[4],DWDP[4],XOM[4],GS[4],HD[4],
IBM[4],INTC[4],JNJ[4],JPM[4],MCD[4],MRK[4],MSFT[4],NKE[4],PFE[4],PG[4],TRV[4],UNH[4],UTX[4],VZ[4],V[4],WBA[4],DIS[4])
stocks <- cbind(MMM[4],AXP[4],AAPL[4],BA[4],CAT[4],CVX[4],KO[4],DWDP[4],XOM[4],GS[4],HD[4],
IBM[4],INTC[4],JNJ[4],JPM[4],MCD[4],MRK[4],MSFT[4],NKE[4],PFE[4],PG[4],TRV[4],UNH[4],UTX[4],VZ[4],V[4],WBA[4],DIS[4])
View(stocks)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
View(stocks)
View(V)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
View(stocks)
V[,4]
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
View(stocks)
View(stocks)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
V[,4]
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4], na.rm=TRUE)
View(V)
which(is.null(V))
is.null(V)
c(NULL)
stuff <- data.frame(col1 = c(NULL, 5 ,56),
col2 = c(3, 4, NULL))
is.null(Stuff)
View(stuff)
stuff <- data.frame(col1 = c(NA, 5 ,56),
col2 = c(3, 4, NA))
is.na(Stuff)
is.na(stuff)
which(is.na(stuff))
which(is.na(V))
is.na(V)
stuff <- filter(V, is.na(V)=TRUE)
stuff <- filter(V, is.na(V)==TRUE)
stuff <- filter(V, is.na(V)==TRUE)
library(dplyr)
stuff <- filter(V, is.na(V)==TRUE)
stuff <- subset(V, is.na(V)==TRUE)
View(stuff)
stuff <- subset(V, is.na(V)==FALSE)
stuff <- subset(V, is.na(V)==FALSE)
filter(!is.na(V))
filter(!is.na(V[,1]))
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,(i+30)], order = c(0,0,0)), output = TRUE)[,5])
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,(i)], order = c(0,0,0)), output = TRUE)[,5])
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5])
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5])
}
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5])
}
t
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
# Needed Libraries for Analysis #
library(graphics)
library(quantmod)
library(TTR)
library(ks)
library(scales)
library(forecast)
library(aTSA)
library(fGarch)
library(ccgarch)
library(rugarch)
# Load Stock Data & Calculate Returns#
tickers = c("AAPL", "MSFT")
getSymbols(tickers)
stocks <- cbind(AAPL[,4] ,MSFT[,4])
View(MSFT)
View(stocks)
stocks$msft_r <- ROC(stocks$MSFT.Close)
stocks$aapl_r <- ROC(stocks$AAPL.Close)
View(stocks)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
DJIA = c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ",
"JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
getSymbols(DJIA)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WBA[,4],DIS[,4])
lapply(stocks, ROC())
sapply(stocks, ROC(x))
sapply(stocks, function(x) ROC(x))
apply(stocks, function(x) ROC(x))
apply(stocks, ROC(x))
apply(stocks, ROC())
apply(stocks, c(1,2), ROC())
apply(stocks, c(1,2), mean)
apply(stocks, c(1,2), ROC)
apply(stocks, c(1,2), ROC)
print(apply(stocks, c(1,2), ROC))
print(apply(stocks, c(1,2), ROC()))
apply(stocks, c(1,2), ROC())
apply(stocks, c(1,2), ROC())
rollapply(stocks, c(1,2), ROC())
for(i in 1:30){
ROC(stocks[,i])
}
View(stocks)
View(stocks)
ROC(stocks[,1])
ROC(stocks[,i])
stocks['MMM']
stocks[,'MMM']
stocks[,1]
for(i in 1:30){
ROC(stocks[,i])
}
View(stocks)
do.call(merge, lapply(stocks, ROC())
do.call(merge, lapply(stocks, ROC()))
do.call(merge, lapply(stocks, ROC()))
do.call(merge, lapply(stocks, ROC(x)))
do.call(merge, lapply(list(stocks), ROC(x)))
do.call(merge, lapply(list(stocks), ROC()))
ROC(stocks[,1])
ROC(stocks[,2])
View(stocks)
for(i in 1:28){
ROC(stocks[,i])
}
stock_return <- ROC(stocks[,i])
View(stock_return)
# Rank stocks by ARCH test significance
arch.test(arima(stocks$[,i], order = c(0,0,0)), output = TRUE)
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:28){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
DJIA = c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ",
"JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
getSymbols(DJIA)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],CSCO[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WMT[,4],WBA[,4],DIS[,4])
for(i in 1:30){
stock_return <- ROC(stocks[,i])
}
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
## Top 5: IBM, JNJ, NKE, PG, WMT
top5 = c("IBM.Close","JNJ.Close","NKE.Close","PG.Close","WMT.Close","ibm_r","jnj_r","nke_r","pg_r","wmt_r")
stocks <- data.frame(stocks)
stocks <- stocks[,top5]
for(i in 1:30){
stock_return <- ROC(stocks[,i])
}
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
## Top 5: IBM, JNJ, NKE, PG, WMT
top5 = c("IBM.Close","JNJ.Close","NKE.Close","PG.Close","WMT.Close","ibm_r","jnj_r","nke_r","pg_r","wmt_r")
stocks_df <- data.frame(stocks)
top_stocks <- stocks[,top5]
View(stocks_df)
View(stocks)
output <- matrix(ncol=30, nrow=3049)
iterations = 3049
variables = 30
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:iterations){
output[i,] <- ROC(stocks[,i])
}
for(i in 1:variables){
output[,i] <- ROC(stocks[,i])
}
View(output)
stocks <- cbind(stocks,output)
View(stocks)
paste_names <- paste(DJIA,".returns",sep = '')
names(stocks)
names(stocks)[30:60] <- paste_names
names(stocks)[30:60] <- names(paste_names)
names(stocks)[30:60] <- paste_names
colnames(stocks)[30:60] <- paste_names
colnames(stocks)[30:60]
View(stocks)
# load CSV data file
library(stringr)
library(graphics)
library(quantmod)
library(TTR)
library(ks)
library(scales)
library(forecast)
library(aTSA)
library(ccgarch)
library(rugarch)
library(dplyr)
DJIA = c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ",
"JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
library(fGarch)
getSymbols(DJIA)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],CSCO[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WMT[,4],WBA[,4],DIS[,4])
paste_names <- paste(DJIA,".returns",sep = '')
paste_names <- paste(DJIA,".returns",sep = '')
iterations = 3049
variables = 30
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[,i] <- ROC(stocks[,i])
}
View(output)
stocks <- cbind(stocks,output)
View(stocks)
stocks <- cbind(stocks,output)
colnames(stocks)[31:60]
View(output)
View(stocks)
colnames(stocks)[31:60] <- paste_names
View(stocks)
colnames(stocks)[31:60] <- paste_names
colnames(stocks)[31:60] <- c(paste_names)
paste_names
View(stocks)
colnames(stocks)[31:60] <- c(paste_names)
View(stocks)
library(stringr)
library(graphics)
library(quantmod)
library(TTR)
library(ks)
library(scales)
library(forecast)
library(aTSA)
library(ccgarch)
library(fGarch)
library(rugarch)
library(dplyr)
DJIA = c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ",
"JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
getSymbols(DJIA)
stocks <- cbind(MMM[,4],AXP[,4],AAPL[,4],BA[,4],CAT[,4],CVX[,4],CSCO[,4],KO[,4],DWDP[,4],XOM[,4],GS[,4],HD[,4],
IBM[,4],INTC[,4],JNJ[,4],JPM[,4],MCD[,4],MRK[,4],MSFT[,4],NKE[,4],PFE[,4],PG[,4],TRV[,4],UNH[,4],UTX[,4],VZ[,4],V[,4],WMT[,4],WBA[,4],DIS[,4])
paste_names <- paste(DJIA,".returns",sep = '')
#Create Rolling returns for each stock
#Cbind the stock DF with the returns DF
iterations = 3049
variables = 30
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[,i] <- ROC(stocks[,i])
}
stocks <- cbind(stocks,output)
paste_names
colnames(stocks)[31:60] <- c(paste_names)
View(stocks)
View(output)
View(stocks)
for (i in 1:30){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
library(stringr)
library(graphics)
library(quantmod)
library(TTR)
library(ks)
library(scales)
library(forecast)
library(aTSA)
library(ccgarch)
library(fGarch)
library(rugarch)
library(dplyr)
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5]
}
warnings()
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
View(tests)
## Top 5: IBM, JNJ, NKE, PG, WMT
top5 = c("IBM.Close","JNJ.Close","NKE.Close","PG.Close","WMT.Close","ibm_r","jnj_r","nke_r","pg_r","wmt_r")
stocks_df <- data.frame(stocks)
top_stocks <- stocks[,top5]
# Rank stocks by ARCH test significance
ARCH_tests = list()
for (i in 1:30){
ARCH_tests[DJIA[i]] = sum(arch.test(arima(stocks[,i], order = c(0,0,0)), output = TRUE)[,5])
}
warnings()
tests <- data.frame(unlist(ARCH_tests), DJIA)
tests <- arrange(tests,unlist.ARCH_tests.)
View(tests)
## Top 5: IBM, JNJ, NKE, PG, WMT
top5 = c("IBM.Close","JNJ.Close","NKE.Close","PG.Close","WMT.Close","ibm_r","jnj_r","nke_r","pg_r","wmt_r")
stocks_df <- data.frame(stocks)
top_stocks <- stocks[,top5]
info = data.frame()
top = c("IBM", "JNJ", "NKE", "PG", "WMT")
for (i in 1:5){
temp <- data.frame()
j <- 1
# GARCH-Normal
GARCH.N <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="norm", include.mean = FALSE)
temp[j,"model"] <- "GARCH-Normal"
temp[j,"alpha"] <- GARCH.N@fit$par["alpha1"]
temp[j,"beta"]  <- GARCH.N@fit$par["beta1"]
temp[j,"AIC"]   <- GARCH.N@fit$ics["AIC"]
j <- 2
# GARCH-t
GARCH.t <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="std", include.mean = FALSE)
temp[j,"model"] <- "GARCH-t"
temp[j,"alpha"] <- GARCH.t@fit$par["alpha1"]
temp[j,"beta"]  <- GARCH.t@fit$par["beta1"]
temp[j,"AIC"]   <- GARCH.t@fit$ics["AIC"]
j <- 3
# QGARCH-Normal
Skew.GARCH.N <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="snorm",include.mean = FALSE)
temp[j,"model"] <- "QGARCH-Normal"
temp[j,"alpha"] <- Skew.GARCH.N@fit$par["alpha1"]
temp[j,"beta"]  <- Skew.GARCH.N@fit$par["beta1"]
temp[j,"AIC"]   <- Skew.GARCH.N@fit$ics["AIC"]
j <- 4
# QGARCH-t
Skew.GARCH.t <- garchFit(formula= ~ garch(1,1), data=stocks[,i+5],
cond.dist="sstd", include.mean = FALSE)
temp[j,"model"] <- "QGARCH-t"
temp[j,"alpha"] <- Skew.GARCH.t@fit$par["alpha1"]
temp[j,"beta"]  <- Skew.GARCH.t@fit$par["beta1"]
temp[j,"AIC"]   <- Skew.GARCH.t@fit$ics["AIC"]
info <- bind_rows(info, temp)
}
# best models
info <- info[c(2,8,10,14,20),]
info["stock"] <- top
View(info)
info["stock"] <- top
info["stock"] <- top
# rank by alpha (most susceptible to market shock)
info <- arrange(info, desc(alpha))
# rank by beta (longest lasting shock effects)
info <- arrange(info, desc(beta))
## from longest to shortest effect: PG, IBM, JNJ, NKE, WMT
## from longest to shortest effect: PG, IBM, JNJ, NKE, WMT
